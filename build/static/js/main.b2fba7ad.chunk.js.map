{"version":3,"sources":["PostForm.js","Post.js","AllPost.js","Show.js","App.js","postReducer.js","index.js"],"names":["PostForm","handleSubmit","e","preventDefault","firstName","getFirstName","value","lastName","getLastName","address","getAddress","city","getCity","phone","getPhone","gpa","getGpa","data","id","Date","editing","props","dispatch","type","history","push","className","onSubmit","this","required","ref","input","placeholder","Component","connect","Post","post","AllPost","style","width","posts","map","el","onClick","state","Show","App","path","component","exact","postReducer","action","concat","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2fba7ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\n\r\n\r\nclass PostForm extends Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const firstName = this.getFirstName.value;\r\n        const lastName = this.getLastName.value;\r\n        const address = this.getAddress.value;\r\n        const city = this.getCity.value;\r\n        const phone = this.getPhone.value;\r\n        const gpa = this.getGpa.value;\r\n        const data = {\r\n            id: new Date(),\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            city,\r\n            phone,\r\n            gpa,\r\n            editing: false\r\n        }\r\n        this.props.dispatch({\r\n            type: 'ADD_POST',\r\n            data\r\n        })\r\n        this.props.history.push('/list');\r\n        this.getFirstName.value = '';\r\n        this.getLastName.value = '';\r\n        this.getAddress.value = '';\r\n        this.getCity.value = '';\r\n        this.getPhone.value = '';\r\n        this.getGpa.value = '';\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"post-container\">\r\n                <h1 className=\"post_heading\">Create Student Record</h1>\r\n                <form className=\"form\" onSubmit={this.handleSubmit} >\r\n                    <label>First Name</label><input required type=\"text\" ref={(input) => this.getFirstName = input}\r\n                        placeholder=\"Enter First Name\" /><br /><br />\r\n                         <label>Last Name</label><input required type=\"text\" ref={(input) => this.getLastName = input}\r\n                        placeholder=\"Enter Last Name\" /><br /><br />\r\n                         <label>Street Number/ Name</label><input required type=\"text\" ref={(input) => this.getAddress = input}\r\n                        placeholder=\"Enter Street Name /No\" /><br /><br />\r\n                        <label>City</label><input required type=\"text\" ref={(input) => this.getCity = input}\r\n                        placeholder=\"Enter City\" /><br /><br />\r\n                         <label>Phone no</label><input required type=\"number\" ref={(input) => this.getPhone = input}\r\n                        placeholder=\"Enter Phone No\" /><br /><br />\r\n                         <label>GPA</label><input required type=\"text\" ref={(input) => this.getGpa = input}\r\n                        placeholder=\"Enter GPA\" /><br /><br />\r\n                    <button>Save</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect()(PostForm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass Post extends Component {\r\n   \r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"post\">\r\n                <p className=\"post_message\">{this.props.post.firstName}</p>\r\n                <p className=\"post_message\">{this.props.post.lastName}</p>\r\n                <p className=\"post_message\">{this.props.post.address}</p>\r\n                <p className=\"post_message\">{this.props.post.city}</p>\r\n                <p className=\"post_message\">{this.props.post.phone}</p>\r\n                <p className=\"post_message\">{this.props.post.gpa}</p>\r\n               \r\n            </div>\r\n           \r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default connect()(Post);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Post from './Post';\r\n\r\nimport './list.css'\r\nclass AllPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"table\">\r\n\r\n            <table style={{ width: '50%' }}>\r\n                <tr>\r\n                    <th>Firstname</th>\r\n                    <th>Lastname</th>\r\n                    <th>Phone</th>\r\n                    <th>GPA</th>\r\n                    <th>Remove</th>\r\n                    <th>Details</th>\r\n                </tr>\r\n\r\n                {\r\n                    this.props.posts.map(el => (\r\n\r\n                        <tr>\r\n                            <td>{el.firstName}</td>\r\n                            <td>{el.lastName}</td>\r\n                            <td>{el.phone}</td>\r\n                            <td>{el.gpa}</td>\r\n                            <td>\r\n                                <span className=\"control-buttons\">\r\n                                    <button className=\"delete\"\r\n                                onClick={() => this.props.dispatch({ type: 'DELETE_POST', id: el.id })}>Delete</button>\r\n                                </span>\r\n                                </td>\r\n                               \r\n                                <td><span className=\"control-buttons\"><button className=\"delete\"\r\n                                    \r\n                                    onClick={(e)=>{\r\n                                        e.preventDefault();\r\n                                        this.props.dispatch({ type: 'REVIEW_POST', id: el.id })\r\n                                        this.props.history.push('/show');\r\n                                    }}\r\n                                    \r\n                                    >Details</button>\r\n                                </span>\r\n                                </td>\r\n                           \r\n                \r\n                        </tr>\r\n                    ))}\r\n            </table>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(AllPost);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\n\r\nclass Show extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"post-container\">\r\n                <h1 className=\"post_heading\">Student Details</h1>\r\n                {this.props.posts.map((el) => (\r\n                    <div>\r\n                        <p>First Name: {el.firstName}</p>\r\n                        <p>Last Name: {el.lastName}</p>\r\n                        <p>Phone No: {el.phone}</p>\r\n                        <p>GPA: {el.gpa}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Show);","import React, { Component } from 'react';\nimport PostForm from './PostForm';\nimport AllPost from './AllPost';\nimport Show from './Show';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"navbar\">\n          <h2 className=\"center \">Student Mangement System</h2>\n        </div>\n        <Switch>\n          <Route path=\"/\" component={PostForm} exact />\n          <Route path=\"/list\" component={AllPost} exact/>\n          <Route path=\"/show\" component={Show} />\n          \n         \n        </Switch>\n      </div>\n    );\n  }\n}\nexport default App;","const postReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_POST':\r\n            return state.concat([action.data])\r\n        case 'DELETE_POST':\r\n            return state.filter((post) => post.id !== action.id)\r\n        case 'REVIEW_POST':\r\n            return state.filter((post) => post.id == action.id)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default postReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nimport postReducer from './postReducer';\n\nconst store = createStore(postReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconsole.log('hello',store);\n\nexport default store;\n\nReactDOM.render(\n<Provider store={store}>\n<BrowserRouter><App /></BrowserRouter>\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}